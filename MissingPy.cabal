Name: MissingPy
Version: 0.11
License: MIT
Maintainer: Arjun Comar <nrujac@gmail.com>
Author: John Goerzen
license-file: COPYRIGHT
extra-source-files: COPYING, genexceptions.hs, README, INSTALL,
                    glue/excglue.h, glue/glue.h
Stability: Alpha
Copyright: Copyright (c) 2005-2008 John Goerzen
Synopsis: Haskell interface to Python
Homepage: http://github.com/arjuncomar/missingpy
Bug-reports: http://github.com/arjuncomar/missingpy/issues
Description:  
 This version of MissingPy is just a low-level Haskell binding to 
 a Python interpreter (<=2.7). The rest of the original 
 description still applies. All extra dependencies have been
 removed to make this change, and exceptions have been updated
 to the modern system. This of course changes the API a bit.

 Original Description:
 MissingPy is two things:
 .
 A Haskell binding for many C and Python libraries for tasks such as
 data compression, databases, etc.  This can be found in the
 MissingPy module tree.
 .
 Also, it's a low-level Haskell binding to the Python interpreter to
 enable development of hybrid applications that use both
 environments.  This can be found in the Python module tree.  The
 Haskell bindings above use this environment.
 .
 MissingPy permits you to call Python code from Haskell.  It does NOT
 permit you to call Haskell code from Python.
 .
 MissingPy is the companion to my MissingH library, and integrates with
 it.

Build-Type: Custom
cabal-version: >= 1.6

Library
  Exposed-Modules: Python.Types,
   Python.Utils,
   Python.Objects,
   Python.Interpreter,
   Python.Exceptions,
   Python.Exceptions.ExcTypes,
   Python.Objects.File,
   Python.Objects.Dict
  Other-Modules: Python.ForeignImports
  Build-Depends: base == 4.*
  C-Sources: glue/glue.c glue/excglue.c
  Extensions: ForeignFunctionInterface, TypeSynonymInstances,
              FlexibleInstances
